buildscript {
    repositories {
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        mavenCentral()
    }
    dependencies {
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:2.0.0"

    }
}

plugins {
    id 'maven-publish'
}

apply plugin: 'idea'


idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}


allprojects {
    apply from: rootProject.file("gradle/dependencies.gradle")

    group "$projectGroup"
    version "$projectVersion"
}


subprojects {
    apply plugin: 'java'
    apply plugin: "com.github.spotbugs"

    sourceCompatibility = JavaVersion.VERSION_12
    targetCompatibility = JavaVersion.VERSION_12

    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
    }


    dependencies {
        compile libraries.jsonpath

        compile libraries.slf4j

        testImplementation libraries.jupiter

        compileOnly libraries.lombok

        annotationProcessor libraries.lombok

        testCompileOnly libraries.lombok

        testAnnotationProcessor libraries.lombok

        testCompile libraries.logback

    }

    test {
        useJUnitPlatform()
//        filter {
//            includeTestsMatching = "*test*"
//        }
    }

    clean {
        delete "${buildDir}"
    }

    if (project.name != 'xar-api') {
        task sourcesJar(type: Jar, dependsOn: classes) {
            classifier = 'sources'
            from sourceSets.main.allSource
        }

        task javadocJar(type: Jar, dependsOn: javadoc) {
            classifier = 'javadoc'
            from javadoc.destinationDir
        }

        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
            options.addStringOption('encoding', 'UTF-8')
            options.addStringOption('charSet', 'UTF-8')
        }

        artifacts {
            archives sourcesJar
            archives javadocJar
        }

    }
}
